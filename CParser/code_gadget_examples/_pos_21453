SMBNTencrypt(unsigned char *passwd, unsigned char *c8, unsigned char const struct nls_table *codepage)
int rc ;
unsigned char p16 [ 16 ] , p21 [ 21 ] ;
memset ( p16 , '\0' , 16 );
rc = E_md4hash ( passwd , p16 , codepage );

E_md4hash(const unsigned char *passwd, unsigned char const struct nls_table *codepage)
int rc ;
int len ;
__le16 wpwd [ 129 ] ;
if ( passwd )
len = cifs_strtoUTF16 ( wpwd , passwd , 128 , codepage );
len = 0;
* wpwd = 0;
rc = mdfour ( p16 , ( unsigned char * ) wpwd , len * sizeof ( __le16 ) );

mdfour(unsigned char *md4_hash, unsigned char *link_str, int link_len)
int rc ;
unsigned int size ;
struct crypto_shash * md4 ;
struct sdesc * sdescmd4 ;
md4 = crypto_alloc_shash ( "md4" , 0 , 0 );
if ( IS_ERR ( md4 ) )
rc = PTR_ERR ( md4 );
return rc ;
size = sizeof ( struct shash_desc ) + crypto_shash_descsize ( md4 );
sdescmd4 = kmalloc ( size , GFP_KERNEL );
if ( ! sdescmd4 )
rc = - ENOMEM;
sdescmd4 -> shash . tfm = md4;
sdescmd4 -> shash . flags = 0x0;
rc = crypto_shash_init ( & sdescmd4 -> shash );
if ( rc )
rc = crypto_shash_update ( & sdescmd4 -> shash , link_str , link_len );
if ( rc )
rc = crypto_shash_final ( & sdescmd4 -> shash , md4_hash );
return rc ;
return rc ;
